type StrategyData @entity {
  id: ID! # strategy address
  totalEarned: BigDecimal!
  tvl: BigDecimal!
  totalHarvestsCount: BigDecimal!
  harvestCountPerDay: BigDecimal!
  harvestCountPerYear:BigDecimal!
  daysCounter: BigDecimal!
  dailyAPR: BigDecimal!
  yearlyAPR: BigDecimal!
  yearlyCompaundAPR: BigDecimal!
  createStrategyDataDate: BigInt!
  lastHarvestDate: BigInt!
}

type FeesData @entity {
  id: ID!
  totalFees: BigDecimal!
  lastPaidFeesAmount: BigDecimal!
  lastPaidFeesDate: BigInt!
  feesCount: BigInt!
}

type StrategyDayData @entity {
  id: ID! # timestamp rounded to current day by dividing by 86400
  date: Int!
  startDayTvl: BigDecimal!
  earned: BigDecimal!
  tvl: BigDecimal!
  dailyAPRCurrentDay: BigDecimal!
  yearlyAPRCurrentDay: BigDecimal!
  yearlyCompaundAPRCurrentDay: BigDecimal!
  harvestsCountCurrentDay: BigDecimal!
  prognosisHarvestCountPerYear: BigDecimal!
}


type VaultData @entity {
  id: ID! # vault address
  sharesTotalSupply: BigDecimal!
  userCount: BigInt!
  tvlUSD: BigDecimal!
  earningPerOneShareCurrentWithCompaunding: BigDecimal!
  earningPerOneShareCurrent: BigDecimal!
  earningPerOneShareYearlyApy: BigDecimal!
  earningPerOneShareAutoCompaundApy: BigDecimal!

}

type User @entity {
  id: ID! # user wallet address
  wallet: String!
  stakedUsd: BigDecimal!
  sharesAmount: BigDecimal!
}